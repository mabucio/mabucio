@model IEnumerable<StockViewer.Models.StockExchange>

@{
    ViewBag.Title = "Stock Exchange";
}

<h2 class="center">Stock Exchange</h2>
<h3 class="center">@ViewBag.Message</h3>

<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/modernizr-2.6.2.js" type="text/javascript"></script>
<script src="~/Scripts/datevalid.js" type="text/javascript" ></script>
<script type="text/javascript">
    var startDate = '@ViewBag.StartDate';
    var endDate = '@ViewBag.EndDate';
</script>

<div id="container">
    <div id="left">
        <form action="" method="post" enctype="multipart/form-data">
            <label>Load data from file.</label>
            <br />
            <label for="file" draggable="true">Filename:</label>            
            <input type="file" name="file" id="file" />            
            <input class="button" type="submit" value="Send File" />
        </form>
        <br />
        <br />       
       
        @using (Html.BeginForm("Refresh", "StockExchanges", FormMethod.Post))
        {   <p>Date Format: yyyy-mm-dd or yyyymmdd.</p>
            <label for="StarDate">Start Date:</label>
            <input type="text" id="startDate" name="start" accesskey="start" />
            <br />
            <label for="EndDate">End Date:</label>
            <input type="text" id="endDate" name="end" accesskey="end" />
            <br />
            <div style="float:left">
                <input class="button" type="submit" id="submitDate" value="Change date range" />
            </div>
        }

        @using (Html.BeginForm("ResetDate", "StockExchanges", FormMethod.Post))
        {<div style="float:left">
            <input class="button" type="submit" id="restartDate" value="Reset Dates" />
        </div>
        }
        <br />
        
        <div>
            <ul>
                <li class="button">@Html.ActionLink("Show Chart", "ShowChart")</li>
                <li class="button">@Html.ActionLink("Show Table", "ShowTable")</li>
            </ul>
        </div>
    </div>
    <div id="center">
        @switch ((string)@ViewBag.DataRep)
        {
            case "table":
                <div>
                    <table class="table-fill">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Date)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockValue)
                            </th>
                        </tr>

                        @foreach (var item in Model)
                    {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StockValue)
                                </td>
                            </tr>
                        }

                    </table>
                </div>
                break;
            case "chart":
                <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
                <script type="text/javascript">

                    google.charts.load('current', { packages: ['corechart'] });
                    google.charts.setOnLoadCallback(drawChart);

                    function drawChart() {
                        //Place data from database to array
                        var myArray = [];

                        @foreach(var item in Model)
                        {
                            @:var date = '@Html.DisplayFor(modelItem => item.Date)';             
                            @:var dateParts = date.split('-');
                            @:var fixedDate = new Date(dateParts[2], dateParts[1], dateParts[0]);
                            @:myArray.push([fixedDate, parseFloat('@Html.DisplayFor(modelItem => item.StockValue)')]);
                        }
                        // Create the data table.
                        var data = new google.visualization.DataTable();
                        data.addColumn('datetime', 'Date');
                        data.addColumn('number', 'Stock Value');
                        data.addRows(myArray);
                        // Set chart options
                        var options = {
                            'title': 'Stock Exchange Over Time',
                            'width': 800,
                            'height': 400,
                            curveType: 'function',
                        };
                        // Instantiate and draw our chart, passing in some options.
                        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
                        chart.draw(data, options);
                    }
                </script>

                <div id="chart_div"></div>
                break;
            default:
                <div>
                    <table class="table-fill">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Date)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockValue)
                            </th>
                        </tr>

                        @foreach (var item in Model)
                    {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StockValue)
                                </td>
                            </tr>
                        }

                    </table>
                </div>
                break;
        }
    </div>
</div>
